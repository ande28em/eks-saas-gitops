# Gitea Actions workflow for building and pushing Docker images to Amazon ECR
# This workflow uses the EC2 instance role for AWS authentication
name: Build and Push to ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    # This runs on the Gitea runner we've set up on the EC2 instance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to ECR using Docker
        run: |
          # Use docker run with host network to access IMDS
          docker run --rm --network host \
            -e AWS_DEFAULT_REGION=${{ vars.AWS_REGION }} \
            amazon/aws-cli:latest \
            ecr get-login-password --region ${{ vars.AWS_REGION }} | \
            docker login --username AWS --password-stdin ${{ vars.REPOSITORY_URI }}
          


      - name: Build, tag, and push image to Amazon ECR
        run: |
          echo "Build started on $(date)"
          echo "Building the Docker image..."
          docker build -t ${{ vars.REPOSITORY_URI }}:latest .
          
          # Create a timestamp-based tag for versioning
          TIMESTAMP=$(date -u +"%Y%m%dT%H%M%SZ")
          TAG="prd-$TIMESTAMP"
          
          echo "Tagging image as ${{ vars.REPOSITORY_URI }}:$TAG"
          docker tag ${{ vars.REPOSITORY_URI }}:latest ${{ vars.REPOSITORY_URI }}:$TAG
          
          echo "Pushing the Docker image..."
          docker push ${{ vars.REPOSITORY_URI }}:$TAG
          docker push ${{ vars.REPOSITORY_URI }}:latest
          
          echo "Build completed on $(date)"
